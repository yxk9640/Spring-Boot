import { BinderRoot } from "./BinderRoot.js";
class Binder extends BinderRoot {
  context;
  /**
   *
   * @param context - The form view component instance to update.
   * @param Model - The constructor (the class reference) of the form model. The Binder instantiates the top-level model
   * @param config - The options object, which can be used to config the onChange and onSubmit callbacks.
   *
   * ```
   * binder = new Binder(orderView, OrderModel);
   * or
   * binder = new Binder(orderView, OrderModel, {onSubmit: async (order) => {endpoint.save(order)}});
   * ```
   */
  constructor(context, Model, config) {
    const changeCallback = config?.onChange ?? (typeof context.requestUpdate === "function" ? () => context.requestUpdate() : void 0);
    super(Model, {
      ...config ?? {},
      onChange: changeCallback,
      context
    });
    this.context = context;
  }
}
export {
  Binder
};
//# sourceMappingURL=Binder.js.map
