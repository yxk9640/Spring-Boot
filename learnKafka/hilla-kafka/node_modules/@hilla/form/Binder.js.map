{
  "version": 3,
  "sources": ["src/Binder.ts"],
  "sourcesContent": ["import type { LitElement } from 'lit';\nimport { type BinderConfiguration, BinderRoot } from './BinderRoot.js';\nimport type { AbstractModel, DetachedModelConstructor, Value } from './Models.js';\n\n/**\n * A Binder controls all aspects of a single form.\n * Typically, it is used to get and set the form value,\n * access the form model, validate, reset, and submit the form.\n *\n * @typeParam T - Type of the value that binds to a form\n * @typeParam M - Type of the model that describes the structure of the value\n */\nexport class Binder<M extends AbstractModel> extends BinderRoot<M> {\n  declare readonly ['constructor']: Omit<typeof Binder<M>, 'constructor'>;\n\n  context: Element;\n\n  /**\n   *\n   * @param context - The form view component instance to update.\n   * @param Model - The constructor (the class reference) of the form model. The Binder instantiates the top-level model\n   * @param config - The options object, which can be used to config the onChange and onSubmit callbacks.\n   *\n   * ```\n   * binder = new Binder(orderView, OrderModel);\n   * or\n   * binder = new Binder(orderView, OrderModel, {onSubmit: async (order) => {endpoint.save(order)}});\n   * ```\n   */\n  constructor(context: Element, Model: DetachedModelConstructor<M>, config?: BinderConfiguration<Value<M>>) {\n    const changeCallback =\n      config?.onChange ??\n      (typeof (context as LitElement).requestUpdate === 'function'\n        ? () => (context as LitElement).requestUpdate()\n        : undefined);\n\n    super(Model, {\n      ...(config ?? {}),\n      onChange: changeCallback,\n      context,\n    });\n    this.context = context;\n  }\n}\n"],
  "mappings": "AACA,SAAmC,kBAAkB;AAW9C,MAAM,eAAwC,WAAc;AAAA,EAGjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,YAAY,SAAkB,OAAoC,QAAwC;AACxG,UAAM,iBACJ,QAAQ,aACP,OAAQ,QAAuB,kBAAkB,aAC9C,MAAO,QAAuB,cAAc,IAC5C;AAEN,UAAM,OAAO;AAAA,MACX,GAAI,UAAU,CAAC;AAAA,MACf,UAAU;AAAA,MACV;AAAA,IACF,CAAC;AACD,SAAK,UAAU;AAAA,EACjB;AACF;",
  "names": []
}
