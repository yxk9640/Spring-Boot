import createSourceFile from '@hilla/generator-typescript-utils/createSourceFile.js';
import ts, {} from 'typescript';
function propertyNameToString(node) {
    if (ts.isIdentifier(node) || ts.isStringLiteral(node) || ts.isNumericLiteral(node)) {
        return node.text;
    }
    return null;
}
export class ModelFixProcessor {
    #source;
    constructor(source) {
        this.#source = source;
    }
    process() {
        const statements = this.#source.statements.map((statement) => {
            // filter out the @type property from all models
            if (ts.isClassDeclaration(statement)) {
                const members = statement.members.filter((member) => !(ts.isGetAccessor(member) && propertyNameToString(member.name) === '@type'));
                return ts.factory.createClassDeclaration(statement.modifiers, statement.name, statement.typeParameters, statement.heritageClauses, members);
            }
            return statement;
        });
        return createSourceFile(statements, this.#source.fileName);
    }
}
//# sourceMappingURL=ModelFixProcessor.js.map