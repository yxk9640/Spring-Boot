{"version":3,"file":"ModelFixProcessor.js","sourceRoot":"","sources":["src/ModelFixProcessor.ts"],"names":[],"mappings":"AAAA,OAAO,gBAAgB,MAAM,uDAAuD,CAAC;AACrF,OAAO,EAAE,EAAE,EAAsD,MAAM,YAAY,CAAC;AAEpF,SAAS,oBAAoB,CAAC,IAAqB;IACjD,IAAI,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC;QACnF,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAED,MAAM,OAAO,iBAAiB;IACnB,OAAO,CAAgB;IAEhC,YAAY,MAAqB;QAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,OAAO;QACL,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,EAAE;YAC3D,gDAAgD;YAChD,IAAI,EAAE,CAAC,kBAAkB,CAAC,SAAS,CAAC,EAAE,CAAC;gBACrC,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CACtC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,OAAO,CAAC,CACzF,CAAC;gBAEF,OAAO,EAAE,CAAC,OAAO,CAAC,sBAAsB,CACtC,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,IAAI,EACd,SAAS,CAAC,cAAc,EACxB,SAAS,CAAC,eAAe,EACzB,OAAO,CACR,CAAC;YACJ,CAAC;YAED,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,OAAO,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;CACF","sourcesContent":["import createSourceFile from '@hilla/generator-typescript-utils/createSourceFile.js';\nimport ts, { type ClassDeclaration, type GetAccessorDeclaration } from 'typescript';\n\nfunction propertyNameToString(node: ts.PropertyName): string | null {\n  if (ts.isIdentifier(node) || ts.isStringLiteral(node) || ts.isNumericLiteral(node)) {\n    return node.text;\n  }\n  return null;\n}\n\nexport class ModelFixProcessor {\n  readonly #source: ts.SourceFile;\n\n  constructor(source: ts.SourceFile) {\n    this.#source = source;\n  }\n\n  process(): ts.SourceFile {\n    const statements = this.#source.statements.map((statement) => {\n      // filter out the @type property from all models\n      if (ts.isClassDeclaration(statement)) {\n        const members = statement.members.filter(\n          (member) => !(ts.isGetAccessor(member) && propertyNameToString(member.name) === '@type'),\n        );\n\n        return ts.factory.createClassDeclaration(\n          statement.modifiers,\n          statement.name,\n          statement.typeParameters,\n          statement.heritageClauses,\n          members,\n        );\n      }\n\n      return statement;\n    });\n\n    return createSourceFile(statements, this.#source.fileName);\n  }\n}\n"]}