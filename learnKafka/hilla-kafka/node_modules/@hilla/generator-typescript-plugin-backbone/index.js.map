{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport type SharedStorage from '@hilla/generator-typescript-core/SharedStorage.js';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport type { ReadonlyDeep } from 'type-fest';\nimport type { SourceFile } from 'typescript';\nimport EndpointProcessor from './EndpointProcessor.js';\nimport { EntityProcessor } from './EntityProcessor.js';\n\nexport enum BackbonePluginSourceType {\n  Endpoint = 'endpoint',\n  Entity = 'entity',\n}\n\nexport default class BackbonePlugin extends Plugin {\n  static readonly BACKBONE_PLUGIN_FILE_TAGS = 'BACKBONE_PLUGIN_FILE_TAGS';\n  declare ['constructor']: typeof BackbonePlugin;\n  readonly #tags = new WeakMap<SourceFile, BackbonePluginSourceType>();\n\n  override get path(): string {\n    return import.meta.url;\n  }\n\n  override async execute(storage: SharedStorage): Promise<void> {\n    const endpointSourceFiles = await this.#processEndpoints(storage);\n    const entitySourceFiles = this.#processEntities(storage);\n\n    endpointSourceFiles.forEach((file) => this.#tags.set(file, BackbonePluginSourceType.Endpoint));\n    entitySourceFiles.forEach((file) => this.#tags.set(file, BackbonePluginSourceType.Entity));\n\n    storage.sources.push(...endpointSourceFiles, ...entitySourceFiles);\n    storage.pluginStorage.set(this.constructor.BACKBONE_PLUGIN_FILE_TAGS, this.#tags);\n  }\n\n  async #processEndpoints(storage: SharedStorage): Promise<readonly SourceFile[]> {\n    this.logger.debug('Processing endpoints');\n    const endpoints = new Map<string, Map<string, ReadonlyDeep<OpenAPIV3.PathItemObject>>>();\n\n    Object.entries(storage.api.paths)\n      .filter(([, pathItem]) => !!pathItem)\n      .forEach(([path, pathItem]) => {\n        const [, endpointName, endpointMethodName] = path.split('/');\n\n        let methods: Map<string, ReadonlyDeep<OpenAPIV3.PathItemObject>>;\n\n        if (endpoints.has(endpointName)) {\n          methods = endpoints.get(endpointName)!;\n        } else {\n          methods = new Map();\n          endpoints.set(endpointName, methods);\n        }\n\n        methods.set(endpointMethodName, pathItem!);\n      });\n\n    const processors = await Promise.all(\n      [...endpoints.entries()].map(async ([endpointName, methods]) =>\n        EndpointProcessor.create(endpointName, this, methods, storage.outputDir),\n      ),\n    );\n\n    return Promise.all(processors.map(async (processor) => processor.process()));\n  }\n\n  #processEntities(storage: SharedStorage): readonly SourceFile[] {\n    this.logger.debug('Processing entities');\n\n    return storage.api.components?.schemas\n      ? Object.entries(storage.api.components.schemas).map(([name, component]) =>\n          new EntityProcessor(name, component, this).process(),\n        )\n      : [];\n  }\n}\n"],
  "mappings": "AAAA,OAAO,YAAY;AAKnB,OAAO,uBAAuB;AAC9B,SAAS,uBAAuB;AAEzB,IAAK,2BAAL,kBAAKA,8BAAL;AACL,EAAAA,0BAAA,cAAW;AACX,EAAAA,0BAAA,YAAS;AAFC,SAAAA;AAAA,GAAA;AAKZ,MAAO,uBAAqC,OAAO;AAAA,EACjD,OAAgB,4BAA4B;AAAA,EAEnC,QAAQ,oBAAI,QAA8C;AAAA,EAEnE,IAAa,OAAe;AAC1B,WAAO,YAAY;AAAA,EACrB;AAAA,EAEA,MAAe,QAAQ,SAAuC;AAC5D,UAAM,sBAAsB,MAAM,KAAK,kBAAkB,OAAO;AAChE,UAAM,oBAAoB,KAAK,iBAAiB,OAAO;AAEvD,wBAAoB,QAAQ,CAAC,SAAS,KAAK,MAAM,IAAI,MAAM,yBAAiC,CAAC;AAC7F,sBAAkB,QAAQ,CAAC,SAAS,KAAK,MAAM,IAAI,MAAM,qBAA+B,CAAC;AAEzF,YAAQ,QAAQ,KAAK,GAAG,qBAAqB,GAAG,iBAAiB;AACjE,YAAQ,cAAc,IAAI,KAAK,YAAY,2BAA2B,KAAK,KAAK;AAAA,EAClF;AAAA,EAEA,MAAM,kBAAkB,SAAwD;AAC9E,SAAK,OAAO,MAAM,sBAAsB;AACxC,UAAM,YAAY,oBAAI,IAAiE;AAEvF,WAAO,QAAQ,QAAQ,IAAI,KAAK,EAC7B,OAAO,CAAC,CAAC,EAAE,QAAQ,MAAM,CAAC,CAAC,QAAQ,EACnC,QAAQ,CAAC,CAAC,MAAM,QAAQ,MAAM;AAC7B,YAAM,CAAC,EAAE,cAAc,kBAAkB,IAAI,KAAK,MAAM,GAAG;AAE3D,UAAI;AAEJ,UAAI,UAAU,IAAI,YAAY,GAAG;AAC/B,kBAAU,UAAU,IAAI,YAAY;AAAA,MACtC,OAAO;AACL,kBAAU,oBAAI,IAAI;AAClB,kBAAU,IAAI,cAAc,OAAO;AAAA,MACrC;AAEA,cAAQ,IAAI,oBAAoB,QAAS;AAAA,IAC3C,CAAC;AAEH,UAAM,aAAa,MAAM,QAAQ;AAAA,MAC/B,CAAC,GAAG,UAAU,QAAQ,CAAC,EAAE;AAAA,QAAI,OAAO,CAAC,cAAc,OAAO,MACxD,kBAAkB,OAAO,cAAc,MAAM,SAAS,QAAQ,SAAS;AAAA,MACzE;AAAA,IACF;AAEA,WAAO,QAAQ,IAAI,WAAW,IAAI,OAAO,cAAc,UAAU,QAAQ,CAAC,CAAC;AAAA,EAC7E;AAAA,EAEA,iBAAiB,SAA+C;AAC9D,SAAK,OAAO,MAAM,qBAAqB;AAEvC,WAAO,QAAQ,IAAI,YAAY,UAC3B,OAAO,QAAQ,QAAQ,IAAI,WAAW,OAAO,EAAE;AAAA,MAAI,CAAC,CAAC,MAAM,SAAS,MAClE,IAAI,gBAAgB,MAAM,WAAW,IAAI,EAAE,QAAQ;AAAA,IACrD,IACA,CAAC;AAAA,EACP;AACF;",
  "names": ["BackbonePluginSourceType"]
}
