{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport type SharedStorage from '@hilla/generator-typescript-core/SharedStorage.js';\nimport BackbonePlugin, { BackbonePluginSourceType } from '@hilla/generator-typescript-plugin-backbone';\nimport PluginError from '@hilla/generator-typescript-utils/PluginError.js';\nimport type { SourceFile } from 'typescript';\nimport BarrelProcessor from './BarrelProcessor.js';\n\nexport default class BarrelPlugin extends Plugin {\n  override get path(): string {\n    return import.meta.url;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  override async execute({ pluginStorage, sources }: SharedStorage): Promise<void> {\n    const tags = pluginStorage.get(BackbonePlugin.BACKBONE_PLUGIN_FILE_TAGS) as WeakMap<SourceFile, string> | undefined;\n\n    if (!tags) {\n      throw new PluginError(`${BackbonePlugin.name} should be run first.`, this.constructor.name);\n    }\n\n    const endpoints = sources.filter((file) => tags.get(file) === BackbonePluginSourceType.Endpoint);\n    const barrelFile = new BarrelProcessor(endpoints, this).process();\n    sources.push(barrelFile);\n  }\n}\n"],
  "mappings": "AAAA,OAAO,YAAY;AAEnB,OAAO,kBAAkB,gCAAgC;AACzD,OAAO,iBAAiB;AAExB,OAAO,qBAAqB;AAE5B,MAAO,qBAAmC,OAAO;AAAA,EAC/C,IAAa,OAAe;AAC1B,WAAO,YAAY;AAAA,EACrB;AAAA;AAAA,EAGA,MAAe,QAAQ,EAAE,eAAe,QAAQ,GAAiC;AAC/E,UAAM,OAAO,cAAc,IAAI,eAAe,yBAAyB;AAEvE,QAAI,CAAC,MAAM;AACT,YAAM,IAAI,YAAY,GAAG,eAAe,IAAI,yBAAyB,KAAK,YAAY,IAAI;AAAA,IAC5F;AAEA,UAAM,YAAY,QAAQ,OAAO,CAAC,SAAS,KAAK,IAAI,IAAI,MAAM,yBAAyB,QAAQ;AAC/F,UAAM,aAAa,IAAI,gBAAgB,WAAW,IAAI,EAAE,QAAQ;AAChE,YAAQ,KAAK,UAAU;AAAA,EACzB;AACF;",
  "names": []
}
