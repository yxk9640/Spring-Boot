{
  "version": 3,
  "sources": ["src/ClientProcessor.ts"],
  "sourcesContent": ["import type Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport createFullyUniqueIdentifier from '@hilla/generator-typescript-utils/createFullyUniqueIdentifier.js';\nimport createSourceFile from '@hilla/generator-typescript-utils/createSourceFile.js';\nimport DependencyManager from '@hilla/generator-typescript-utils/dependencies/DependencyManager.js';\nimport PathManager from '@hilla/generator-typescript-utils/dependencies/PathManager.js';\nimport ts, { type SourceFile } from 'typescript';\n\nexport default class ClientProcessor {\n  readonly #owner: Plugin;\n  readonly #outputPath: string;\n\n  constructor(fileName: string, owner: Plugin) {\n    this.#outputPath = new PathManager({ extension: 'ts' }).createRelativePath(fileName);\n    this.#owner = owner;\n  }\n\n  process(): SourceFile {\n    this.#owner.logger.debug(`Generating ${this.#outputPath}`);\n\n    const { exports, imports, paths } = new DependencyManager(new PathManager({ extension: '.js' }));\n    const clientClassId = imports.named.add(paths.createBareModulePath('@hilla/frontend', false), 'ConnectClient');\n\n    const clientVarId = createFullyUniqueIdentifier('client');\n    exports.default.set(clientVarId);\n\n    const declaration = ts.factory.createVariableStatement(\n      undefined,\n      ts.factory.createVariableDeclarationList(\n        [\n          ts.factory.createVariableDeclaration(\n            clientVarId,\n            undefined,\n            undefined,\n            ts.factory.createNewExpression(clientClassId, undefined, [\n              ts.factory.createObjectLiteralExpression(\n                [\n                  ts.factory.createPropertyAssignment(\n                    ts.factory.createIdentifier('prefix'),\n                    ts.factory.createStringLiteral('connect'),\n                  ),\n                ],\n                false,\n              ),\n            ]),\n          ),\n        ],\n        ts.NodeFlags.Const,\n      ),\n    );\n\n    return createSourceFile([...imports.toCode(), declaration, ...exports.toCode()], this.#outputPath);\n  }\n}\n"],
  "mappings": "AACA,OAAO,iCAAiC;AACxC,OAAO,sBAAsB;AAC7B,OAAO,uBAAuB;AAC9B,OAAO,iBAAiB;AACxB,OAAO,YAA6B;AAEpC,MAAO,gBAA8B;AAAA,EAC1B;AAAA,EACA;AAAA,EAET,YAAY,UAAkB,OAAe;AAC3C,SAAK,cAAc,IAAI,YAAY,EAAE,WAAW,KAAK,CAAC,EAAE,mBAAmB,QAAQ;AACnF,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,UAAsB;AACpB,SAAK,OAAO,OAAO,MAAM,cAAc,KAAK,WAAW,EAAE;AAEzD,UAAM,EAAE,SAAS,SAAS,MAAM,IAAI,IAAI,kBAAkB,IAAI,YAAY,EAAE,WAAW,MAAM,CAAC,CAAC;AAC/F,UAAM,gBAAgB,QAAQ,MAAM,IAAI,MAAM,qBAAqB,mBAAmB,KAAK,GAAG,eAAe;AAE7G,UAAM,cAAc,4BAA4B,QAAQ;AACxD,YAAQ,QAAQ,IAAI,WAAW;AAE/B,UAAM,cAAc,GAAG,QAAQ;AAAA,MAC7B;AAAA,MACA,GAAG,QAAQ;AAAA,QACT;AAAA,UACE,GAAG,QAAQ;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA,GAAG,QAAQ,oBAAoB,eAAe,QAAW;AAAA,cACvD,GAAG,QAAQ;AAAA,gBACT;AAAA,kBACE,GAAG,QAAQ;AAAA,oBACT,GAAG,QAAQ,iBAAiB,QAAQ;AAAA,oBACpC,GAAG,QAAQ,oBAAoB,SAAS;AAAA,kBAC1C;AAAA,gBACF;AAAA,gBACA;AAAA,cACF;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,QACA,GAAG,UAAU;AAAA,MACf;AAAA,IACF;AAEA,WAAO,iBAAiB,CAAC,GAAG,QAAQ,OAAO,GAAG,aAAa,GAAG,QAAQ,OAAO,CAAC,GAAG,KAAK,WAAW;AAAA,EACnG;AACF;",
  "names": []
}
