{
  "version": 3,
  "sources": ["src/PluginManager.ts"],
  "sourcesContent": ["import type LoggerFactory from '@hilla/generator-typescript-utils/LoggerFactory.js';\nimport type Plugin from './Plugin.js';\nimport type { PluginConstructor } from './Plugin.js';\nimport type ReferenceResolver from './ReferenceResolver.js';\nimport type SharedStorage from './SharedStorage.js';\n\nexport default class PluginManager {\n  readonly #plugins: Plugin[];\n\n  constructor(plugins: readonly PluginConstructor[], resolver: ReferenceResolver, logger: LoggerFactory) {\n    const standardPlugins = [\n      'BackbonePlugin',\n      'ClientPlugin',\n      'BarrelPlugin',\n      'ModelPlugin',\n      'PushPlugin',\n      'SubTypesPlugin',\n    ];\n    const customPlugins = plugins.filter((p) => !standardPlugins.includes(p.name));\n    if (customPlugins.length > 0) {\n      logger.global.info(`Plugins: ${plugins.map(({ name }) => name).join(', ')}`);\n    }\n    this.#plugins = plugins.map((PluginClass) => new PluginClass(resolver, logger));\n  }\n\n  async execute(storage: SharedStorage): Promise<void> {\n    // We need to run plugins sequentially\n    for (const plugin of this.#plugins) {\n      const { name, path } = plugin;\n      plugin.logger.debug({ plugin: { name, path } }, `Executing plugin '${plugin.name}'`);\n      // eslint-disable-next-line no-await-in-loop\n      await plugin.execute(storage);\n    }\n  }\n}\n"],
  "mappings": "AAMA,MAAO,cAA4B;AAAA,EACxB;AAAA,EAET,YAAY,SAAuC,UAA6B,QAAuB;AACrG,UAAM,kBAAkB;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AACA,UAAM,gBAAgB,QAAQ,OAAO,CAAC,MAAM,CAAC,gBAAgB,SAAS,EAAE,IAAI,CAAC;AAC7E,QAAI,cAAc,SAAS,GAAG;AAC5B,aAAO,OAAO,KAAK,YAAY,QAAQ,IAAI,CAAC,EAAE,KAAK,MAAM,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE;AAAA,IAC7E;AACA,SAAK,WAAW,QAAQ,IAAI,CAAC,gBAAgB,IAAI,YAAY,UAAU,MAAM,CAAC;AAAA,EAChF;AAAA,EAEA,MAAM,QAAQ,SAAuC;AAEnD,eAAW,UAAU,KAAK,UAAU;AAClC,YAAM,EAAE,MAAM,KAAK,IAAI;AACvB,aAAO,OAAO,MAAM,EAAE,QAAQ,EAAE,MAAM,KAAK,EAAE,GAAG,qBAAqB,OAAO,IAAI,GAAG;AAEnF,YAAM,OAAO,QAAQ,OAAO;AAAA,IAC9B;AAAA,EACF;AACF;",
  "names": []
}
