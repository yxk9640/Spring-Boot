import ts, {} from "typescript";
const defaultMediaType = "application/json";
function importBuiltInFormModel(specifier, { imports, paths }) {
  const modelPath = paths.createBareModulePath("@hilla/form", false);
  return imports.named.getIdentifier(modelPath, specifier) ?? imports.named.add(modelPath, specifier);
}
function createModelBuildingCallback(name, args) {
  const defaults = [ts.factory.createIdentifier("parent"), ts.factory.createIdentifier("key")];
  return ts.factory.createArrowFunction(
    void 0,
    void 0,
    defaults.map((arg) => ts.factory.createParameterDeclaration(void 0, void 0, arg)),
    void 0,
    ts.factory.createToken(ts.SyntaxKind.EqualsGreaterThanToken),
    ts.factory.createNewExpression(name, void 0, [...defaults, ...args])
  );
}
function createEmptyValueMaker(maker, model) {
  return ts.factory.createPropertyDeclaration(
    [ts.factory.createModifier(ts.SyntaxKind.StaticKeyword), ts.factory.createModifier(ts.SyntaxKind.OverrideKeyword)],
    "createEmptyValue",
    void 0,
    void 0,
    ts.factory.createCallExpression(maker, void 0, [model])
  );
}
export {
  createEmptyValueMaker,
  createModelBuildingCallback,
  defaultMediaType,
  importBuiltInFormModel
};
//# sourceMappingURL=utils.js.map
