import ts, {} from "typescript";
class MetadataProcessor {
  process(schema) {
    const schemaWithMetadata = schema;
    const properties = [
      this.#createAnnotationsProperty(schemaWithMetadata),
      this.#createJavaTypeProperty(schemaWithMetadata)
    ].filter(Boolean);
    if (properties.length === 0) {
      return null;
    }
    return ts.factory.createObjectLiteralExpression(properties);
  }
  #createAnnotationsProperty(schema) {
    const annotations = schema["x-annotations"];
    const hasAnnotations = annotations && annotations.length > 0;
    if (!hasAnnotations) {
      return null;
    }
    const annotationLiterals = annotations.map(
      (annotation) => ts.factory.createObjectLiteralExpression([
        ts.factory.createPropertyAssignment("name", ts.factory.createStringLiteral(annotation.name))
      ])
    );
    return ts.factory.createPropertyAssignment(
      "annotations",
      ts.factory.createArrayLiteralExpression(annotationLiterals)
    );
  }
  #createJavaTypeProperty(schema) {
    const javaType = schema["x-java-type"];
    if (!javaType) {
      return null;
    }
    return ts.factory.createPropertyAssignment("javaType", ts.factory.createStringLiteral(javaType));
  }
}
export {
  MetadataProcessor
};
//# sourceMappingURL=MetadataProcessor.js.map
