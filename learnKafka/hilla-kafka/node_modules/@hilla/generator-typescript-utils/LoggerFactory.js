import Pino, {} from "pino";
import PinoPretty from "pino-pretty";
class LoggerFactory {
  #children = /* @__PURE__ */ new Map();
  #logger;
  constructor({ name, verbose }) {
    const pretty = PinoPretty({
      ignore: "time"
    });
    this.#logger = Pino(
      {
        base: void 0,
        level: verbose ? "debug" : "info",
        name: name ?? "tsgen"
      },
      pretty
    );
  }
  get global() {
    return this.#logger;
  }
  for(caller) {
    if (this.#children.has(caller)) {
      return this.#children.get(caller);
    }
    const child = this.#logger.child({ caller });
    this.#children.set(caller, child);
    return child;
  }
}
export {
  LoggerFactory as default
};
//# sourceMappingURL=LoggerFactory.js.map
