{
  "version": 3,
  "sources": ["src/LoggerFactory.ts"],
  "sourcesContent": ["import Pino, { type Logger } from 'pino';\nimport PinoPretty from 'pino-pretty';\n\nexport { type Logger };\n\nexport type LoggerOptions = Readonly<{\n  name?: string;\n  verbose?: boolean;\n}>;\n\nexport default class LoggerFactory {\n  readonly #children = new Map<string, Logger>();\n  readonly #logger: Logger;\n\n  constructor({ name, verbose }: LoggerOptions) {\n    const pretty = PinoPretty({\n      ignore: 'time',\n    });\n\n    this.#logger = Pino(\n      {\n        base: undefined,\n        level: verbose ? 'debug' : 'info',\n        name: name ?? 'tsgen',\n      },\n      pretty,\n    );\n  }\n\n  get global(): Logger {\n    return this.#logger;\n  }\n\n  for(caller: string): Logger {\n    if (this.#children.has(caller)) {\n      return this.#children.get(caller)!;\n    }\n\n    const child = this.#logger.child({ caller });\n    this.#children.set(caller, child);\n    return child;\n  }\n}\n"],
  "mappings": "AAAA,OAAO,cAA2B;AAClC,OAAO,gBAAgB;AASvB,MAAO,cAA4B;AAAA,EACxB,YAAY,oBAAI,IAAoB;AAAA,EACpC;AAAA,EAET,YAAY,EAAE,MAAM,QAAQ,GAAkB;AAC5C,UAAM,SAAS,WAAW;AAAA,MACxB,QAAQ;AAAA,IACV,CAAC;AAED,SAAK,UAAU;AAAA,MACb;AAAA,QACE,MAAM;AAAA,QACN,OAAO,UAAU,UAAU;AAAA,QAC3B,MAAM,QAAQ;AAAA,MAChB;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAAA,EAEA,IAAI,SAAiB;AACnB,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,IAAI,QAAwB;AAC1B,QAAI,KAAK,UAAU,IAAI,MAAM,GAAG;AAC9B,aAAO,KAAK,UAAU,IAAI,MAAM;AAAA,IAClC;AAEA,UAAM,QAAQ,KAAK,QAAQ,MAAM,EAAE,OAAO,CAAC;AAC3C,SAAK,UAAU,IAAI,QAAQ,KAAK;AAChC,WAAO;AAAA,EACT;AACF;",
  "names": []
}
