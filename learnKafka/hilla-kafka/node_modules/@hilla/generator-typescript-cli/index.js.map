{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import Generator from '@hilla/generator-typescript-core/Generator.js';\nimport LoggerFactory from '@hilla/generator-typescript-utils/LoggerFactory.js';\nimport meow from 'meow';\nimport GeneratorIO from './GeneratorIO.js';\nimport { processInput } from './utils.js';\n\nconst {\n  flags: { outputDir, plugin: plugins, verbose },\n  input: [input],\n} = meow(\n  `\nUsage:\n  tsgen\n    (will read JSON from stdin)\n  tsgen <OpenAPI JSON string>\n  tsgen <OpenAPI file path>\n\nOptions:\n  -h, --help             Show this screen\n  -o, --output-dir       Output directory\n  -p, --plugin <path>    Use the plugin loadable by <path>.\n  --version              Show the app version\n`,\n  {\n    flags: {\n      outputDir: {\n        default: 'frontend/generated',\n        shortFlag: 'o',\n        type: 'string',\n      },\n      plugin: {\n        default: [],\n        isMultiple: true,\n        shortFlag: 'p',\n        type: 'string',\n      },\n      verbose: {\n        shortFlag: 'v',\n        type: 'boolean',\n      },\n    },\n    importMeta: import.meta,\n  },\n);\n\nconst logger = new LoggerFactory({ verbose });\n\nconst io = new GeneratorIO(outputDir, logger);\n\nconst resolvedPlugins = await Promise.all(\n  Array.from(new Set(plugins), async (pluginPath) => io.loadPlugin(pluginPath)),\n);\nconst generator = new Generator(resolvedPlugins, { logger, outputDir });\n\nconst files = await generator.process(await processInput(io, input));\nconst filesToDelete = await io.getGeneratedFiles();\nconst generatedFiles = await io.writeGeneratedFiles(files);\n\nawait io.cleanOutputDir(generatedFiles, filesToDelete);\n"],
  "mappings": "AAAA,OAAO,eAAe;AACtB,OAAO,mBAAmB;AAC1B,OAAO,UAAU;AACjB,OAAO,iBAAiB;AACxB,SAAS,oBAAoB;AAE7B,MAAM;AAAA,EACJ,OAAO,EAAE,WAAW,QAAQ,SAAS,QAAQ;AAAA,EAC7C,OAAO,CAAC,KAAK;AACf,IAAI;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA;AAAA,IACE,OAAO;AAAA,MACL,WAAW;AAAA,QACT,SAAS;AAAA,QACT,WAAW;AAAA,QACX,MAAM;AAAA,MACR;AAAA,MACA,QAAQ;AAAA,QACN,SAAS,CAAC;AAAA,QACV,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,MAAM;AAAA,MACR;AAAA,MACA,SAAS;AAAA,QACP,WAAW;AAAA,QACX,MAAM;AAAA,MACR;AAAA,IACF;AAAA,IACA,YAAY;AAAA,EACd;AACF;AAEA,MAAM,SAAS,IAAI,cAAc,EAAE,QAAQ,CAAC;AAE5C,MAAM,KAAK,IAAI,YAAY,WAAW,MAAM;AAE5C,MAAM,kBAAkB,MAAM,QAAQ;AAAA,EACpC,MAAM,KAAK,IAAI,IAAI,OAAO,GAAG,OAAO,eAAe,GAAG,WAAW,UAAU,CAAC;AAC9E;AACA,MAAM,YAAY,IAAI,UAAU,iBAAiB,EAAE,QAAQ,UAAU,CAAC;AAEtE,MAAM,QAAQ,MAAM,UAAU,QAAQ,MAAM,aAAa,IAAI,KAAK,CAAC;AACnE,MAAM,gBAAgB,MAAM,GAAG,kBAAkB;AACjD,MAAM,iBAAiB,MAAM,GAAG,oBAAoB,KAAK;AAEzD,MAAM,GAAG,eAAe,gBAAgB,aAAa;",
  "names": []
}
